options = WMSTileOptions(format = "image/png", transparent = TRUE),
attribution = "Weather data © 2012 IEM Nexrad"
)
leaflet() %>% addTiles() %>% setView(9.0, 42.0285, zoom = 10) %>%
addWMSTiles(
"http://geoportale.lamma.rete.toscana.it/geoserver/ARW_12KM_RUN00/ows",
layers = "arw_12km_Temperature_surface_20160218T000000000Z",
options = WMSTileOptions(format = "image/png", transparent = TRUE),
attribution = "LaMMA Consortium"
)
leaflet() %>% addTiles() %>% setView(9.0, 42.0285, zoom = 10) %>%
addWMSTiles(
"http://geoportale.lamma.rete.toscana.it/geoserver/ARW_12KM_RUN00/ows",
layers = "arw_12km_Temperature_surface_20160212T000000000Z",
options = WMSTileOptions(format = "image/png", transparent = TRUE),
attribution = "Consorzio LaMMA - LaMMA Consortium - CCby licence"
)
leaflet() %>% addTiles() %>% setView(9.0, 42.0285, zoom = 10) %>%
addWMSTiles(
"http://geoportale.lamma.rete.toscana.it/geoserver/ARW_12KM_RUN00/ows",
layers = "arw_12km_Temperature_surface_20160218T000000000Z",
options = WMSTileOptions(format = "image/png", transparent = TRUE),
attribution = "Consorzio LaMMA - LaMMA Consortium - CCby licence"
)
leaflet() %>% addTiles() %>% setView(9.0, 42.0285, zoom = 8) %>%
addWMSTiles(
"http://geoportale.lamma.rete.toscana.it/geoserver/ARW_12KM_RUN00/ows",
layers = "arw_12km_Temperature_surface_20160218T000000000Z",
options = WMSTileOptions(format = "image/png", transparent = TRUE),
attribution = "Consorzio LaMMA - LaMMA Consortium - CCby licence"
)
leaflet() %>% addTiles() %>% setView(9.0, 42.0285, zoom = 5) %>%
addWMSTiles(
"http://geoportale.lamma.rete.toscana.it/geoserver/ARW_12KM_RUN00/ows",
layers = "arw_12km_Temperature_surface_20160218T000000000Z",
options = WMSTileOptions(format = "image/png", transparent = TRUE),
attribution = "Consorzio LaMMA - LaMMA Consortium - CCby licence"
)
leaflet() %>% addTiles() %>% setView(9.0, 42.0285, zoom = 4) %>%
addWMSTiles(
"http://geoportale.lamma.rete.toscana.it/geoserver/ARW_12KM_RUN00/ows",
layers = "arw_12km_Temperature_surface_20160217T000000000Z",
options = WMSTileOptions(format = "image/png", transparent = TRUE),
attribution = "Consorzio LaMMA - LaMMA Consortium - CC-BY"
)
?addWMSTiles
library(leaflet)
leaflet() %>% addTiles() %>% setView(9.0, 42.0285, zoom = 4) %>%
addWMSTiles(
"http://geoportale.lamma.rete.toscana.it/geoserver/ARW_12KM_RUN00/ows",
layers = "arw_12km_Temperature_surface_20160217T000000000Z",
options = WMSTileOptions(format = "image/png", transparent = TRUE),
attribution = " <a href='https://www.mapbox.com/about/maps/'>LaMMA Consortium -©</a> <a href='http://creativecommons.org/licenses/by/4.0/'>CC-by</a>"
)
leaflet() %>% addTiles() %>% setView(9.0, 42.0285, zoom = 4) %>%
addWMSTiles(
"http://geoportale.lamma.rete.toscana.it/geoserver/ARW_12KM_RUN00/ows",
layers =c("arw_12km_Temperature_surface_20160217T000000000Z", "arw_12km_Temperature_surface_20160218T000000000Z"),
options = WMSTileOptions(format = "image/png", transparent = TRUE),
attribution = " <a href='https://www.mapbox.com/about/maps/'>LaMMA Consortium -©</a> <a href='http://creativecommons.org/licenses/by/4.0/'>CC-BY</a>"
)
leaflet() %>% addTiles() %>% setView(9.0, 42.0285, zoom = 5) %>%
addWMSTiles(
"http://geoportale.lamma.rete.toscana.it/geoserver/ARW_12KM_RUN00/ows",
layers ="arw_12km_Temperature_surface_20160218T000000000Z",
options = WMSTileOptions(format = "image/png", transparent = TRUE),
attribution = " <a href='https://www.mapbox.com/about/maps/'>LaMMA Consortium -©</a> <a href='http://creativecommons.org/licenses/by/4.0/'>CC-BY</a>"
)
leaflet() %>% addTiles() %>% setView(9.0, 42.0285, zoom = 5) %>%
addWMSTiles(
"http://geoportale.lamma.rete.toscana.it/geoserver/NDVI/ows",
layers ="NDVI_2014",
options = WMSTileOptions(format = "image/png", transparent = TRUE),
attribution = " <a href='https://www.mapbox.com/about/maps/'>LaMMA Consortium -©</a> <a href='http://creativecommons.org/licenses/by/4.0/'>CC-BY</a>"
)
leaflet() %>% addTiles() %>% setView(9.0, 42.0285, zoom = 8) %>%
addWMSTiles(
"http://geoportale.lamma.rete.toscana.it/geoserver/NDVI/ows",
layers ="NDVI_2014",
options = WMSTileOptions(format = "image/png", transparent = TRUE),
attribution = " <a href='https://www.mapbox.com/about/maps/'>LaMMA Consortium -©</a> <a href='http://creativecommons.org/licenses/by/4.0/'>CC-BY</a>"
)
?addWMSTiles
leaflet() %>% addTiles() %>% setView(9.0, 42.0285, zoom = 8) %>%
addWMSTiles(
"http://geoportale.lamma.rete.toscana.it/geoserver/NDVI/ows",
layers ="NDVI_2014",
options = WMSTileOptions(format = "image/png", transparent = TRUE),
opacity = 0.5,
attribution = " <a href='https://www.mapbox.com/about/maps/'>LaMMA Consortium -©</a> <a href='http://creativecommons.org/licenses/by/4.0/'>CC-BY</a>"
)
leaflet() %>% addTiles() %>% setView(9.0, 42.0285, zoom = 8) %>%
addWMSTiles(
"http://geoportale.lamma.rete.toscana.it/geoserver/NDVI/ows",
layers ="NDVI_2014",
options = WMSTileOptions(format = "image/png", transparent = TRUE,    opacity = 1),
attribution = " <a href='https://www.mapbox.com/about/maps/'>LaMMA Consortium -©</a> <a href='http://creativecommons.org/licenses/by/4.0/'>CC-BY</a>"
)
leaflet() %>% addTiles() %>% setView(9.0, 42.0285, zoom = 8) %>%
addWMSTiles(
"http://geoportale.lamma.rete.toscana.it/geoserver/NDVI/ows",
layers ="NDVI_2014",
options = WMSTileOptions(format = "image/png", transparent = TRUE,    opacity = 0.5),
attribution = " <a href='https://www.mapbox.com/about/maps/'>LaMMA Consortium -©</a> <a href='http://creativecommons.org/licenses/by/4.0/'>CC-BY</a>"
)
leaflet() %>% addTiles() %>% setView(9.0, 42.0285, zoom = 8) %>%
addWMSTiles(
"http://geoportale.lamma.rete.toscana.it/geoserver/NDVI/ows",
layers ="NDVI_2014",
options = WMSTileOptions(format = "image/png", transparent = TRUE,    opacity = 0.4),
attribution = " <a href='https://www.mapbox.com/about/maps/'>LaMMA Consortium -©</a> <a href='http://creativecommons.org/licenses/by/4.0/'>CC-BY</a>"
)
leaflet() %>% addTiles() %>% setView(9.0, 42.0285, zoom = 8) %>%
addWMSTiles(
"http://geoportale.lamma.rete.toscana.it/geoserver/NDVI/ows",
layers ="NDVI_2014",
options = WMSTileOptions(format = "image/png", transparent = TRUE,    opacity = 0.4),
attribution = "WMS NDVI <a href='https://www.mapbox.com/about/maps/'>LaMMA Consortium -©</a> <a href='http://creativecommons.org/licenses/by/4.0/'>CC-BY</a>"
)
source("https://rawgit.com/greenore/initR/master/init.R")
packagesGithub(c("systemR", "ocR"), repo_name="greenore")
require(GSODTools)
require(weatherData)
require(source.gist)
source.gist("https://gist.github.com/alfcrisci/e47ced38c08c8f810a04")
getdailymeteodata=function(typestaz,startdate,endate,idstaz) {
require(weatherData)
require(GSODTools)
if (typestaz == "WU-PWS")
{
daily <-getSummarizedWeather(idstaz, startdate,endate, station_type = "id",opt_all_columns = TRUE)
weather=data.frame(data=as.Date(daily$Date),
max=daily$TemperatureHighC,
tmed=daily$TemperatureAvgC,
tmin=daily$TemperatureLowC,
rhum=daily$HumidityAvg,
prec=daily$PrecipitationSumCM*10)
return(weather)
}
else if (typestaz == "WU-STAZ")
{
daily <-getSummarizedWeather(idstaz, startdate,endate,opt_all_columns = TRUE)
weather=data.frame(data=as.Date(gsod_staz$YEARMODA),
tmax=daily$Max_TemperatureC,
tmed=daily$Mean_TemperatureC,
tmin=daily$Min_TemperatureC,
rhum=daily$Mean_Humidity,
prec=daily$Precipitationmm,
press=daily$Mean_Sea_Level_PressurehPa,
wind=daily$Mean_Wind_SpeedKm_h,
cloud=daily$CloudCover,
events=daily$Events)
return(daily)
}
else (typestaz == "GSOD")
{
gsod_staz <- dlGsodStations(usaf = idstaz,start_year = as.numeric(format(startdate,"%Y")), end_year = as.numeric(format(enddate,"%Y")),unzip = TRUE)
gsod_staz$YEARMODA <- as.Date(strptime(gsod_staz$YEARMODA, format = "%Y%m%d"))
gsod_staz$TEMP <- toCelsius(gsod_staz$TEMP, digits = 1)
gsod_staz$MAX <- toCelsius(gsod_staz$MAX, digits = 1)
gsod_staz$MIN <- toCelsius(gsod_staz$MIN, digits = 1)
gsod_staz$PRCP <-inch2Millimeter(gsod_staz$PRCP, digits = 1)
gsod_staz$DEWP <- toCelsius(gsod_staz$DEWP, digits = 1)
gsod_staz$RH <- 100*(exp((17.625*gsod_staz$DEWP)/(243.04+gsod_staz$DEWP))/exp((17.625*gsod_staz$TEMP)/(243.04+gsod_staz$TEMP)))
weather=data.frame(data=as.Date(gsod_staz$YEARMODA),
tmax=gsod_staz$MAX,
tmed=gsod_staz$TEMP,
tmin=daily$TemperatureLowC,
rhum=daily$gsod_staz$RH,
prec=daily$gsod_staz$PRCP)
return(weather)
}
}
source.gist("https://gist.github.com/alfcrisci/e47ced38c08c8f810a04")
a=getURL("https://gist.github.com/alfcrisci/e47ced38c08c8f810a04", followlocation = TRUE)
a
source.gist("e47ced38c08c8f810a04")
a=getURL("https://gist.githubusercontent.com/alfcrisci/e47ced38c08c8f810a04/raw/a3ac1d36b5ac7b2814b93f3a965bca42f0dd78c7/getdailymeteodata.r", followlocation = TRUE)
a
source(getURL("https://gist.githubusercontent.com/alfcrisci/e47ced38c08c8f810a04/raw/a3ac1d36b5ac7b2814b93f3a965bca42f0dd78c7/getdailymeteodata.r", followlocation = TRUE))
ls
ls()
source.gist("80eab10591b7bc0b0798")
require(httr)
mylogin <- "alfcrisci"
gists.url <- paste0("https://api.github.com/users/", mylogin, "/gists")
x <- content(GET(gists.url))
gist.id <- lapply(x, "[[", "id")
lapply(gist.id, function(x){
cmd <- paste0("rm -rf ", x, ";git clone git://gist.github.com/", x)
system(cmd)
}
)
library("rWeatherITA", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
get_daily_weather(typestaz = "WU-STAZ", "2015-01-01", "2015-02-28", idstaz = "LIRQ")
remove.packages("rWeatherITA", lib="~/R/x86_64-pc-linux-gnu-library/3.2")
devtools::install_github("alfcrisci/rWeatherITA")
devtools::install_github("alfcrisci/rWeatherITA")
library(rWeatherITA)
get_daily_weather(typestaz = "WU-STAZ", "2015-01-01", "2015-02-28", idstaz = "LIRQ")
dlGsodStations
?dlGsodStations
devtools::install_github("alfcrisci/rWeatherITA")
library(rWeatherITA)
get_daily_weather(typestaz = "WU-STAZ", "2015-01-01", "2015-02-28", idstaz = "LIRQ")
library(rWeatherITA)
devtools::install_github("alfcrisci/rWeatherITA")
library(rWeatherITA)
get_daily_weather(typestaz = "WU-STAZ", "2015-01-01", "2015-02-28", idstaz = "LIRQ")
devtools::install_github("alfcrisci/rWeatherITA")
library(rWeatherITA)
get_daily_weather(typestaz = "WU-STAZ", "2015-01-01", "2015-02-28", idstaz = "LIRQ")
get_daily_weather(typestaz = "GSOD", "2015-01-01", "2015-02-28", idstaz = "LIRQ")
library("rWeatherITA", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
data("station_gsod_sp")
station_gsod_sp
station_gsod_sp$USAF
station_gsod_sp@data
library(mapview)
mapview(station_gsod_sp)
crs = CRS("+init=epsg:4326")
proj4string(station_wu) <- crs
proj4string(station_gsod_sp) <- crs
save(station_gsod_sp,"station_gsod_sp.RData")
save(station_gsod_sp,file="station_gsod_sp.RData")
dir()
mapview(station_gsod_sp)
get_daily_weather(typestaz = "GSOD", "2015-01-01", "2015-02-28", idstaz = "161700")
data(gsodstations)
station_gsod_ita=station_gsod_sp@data
save(station_gsod_ita,"station_gsod_ita.RData")
save(station_gsod_ita,file="station_gsod_ita.RData")
gsodstations=station_gsod_sp@data
save(gsodstations,file="gsodstations.RData")
devtools::install_github("alfcrisci/rWeatherITA")
get_daily_weather(typestaz = "GSOD", "2015-01-01", "2015-02-28", idstaz = "161700")
gsodstations
devtools::install_github("alfcrisci/rWeatherITA")
library("rWeatherITA)
library("rWeatherITA")
get_daily_weather(typestaz = "GSOD", "2015-01-01", "2015-02-28", idstaz = "161700")
devtools::install_github("alfcrisci/rWeatherITA")
library("rWeatherITA")
get_daily_weather(typestaz = "GSOD", "2015-01-01", "2015-02-28", idstaz = "161700")
require(GSODTools)
get_daily_weather(typestaz = "GSOD", "2015-01-01", "2015-02-28", idstaz = "161700")
as.numeric(format("2015-01-01","%Y"))
format("2015-01-01","%Y")
strfformat("2015-01-01","%Y")
strformat("2015-01-01","%Y")
sprtformat("2015-01-01","%Y")
sprtime("2015-01-01","%Y")
sprftime("2015-01-01","%Y")
stprtime("2015-01-01","%Y")
Risultati relativi a R strptime
Cerca invece R strf time
Risultati di ricerca
strptime("2015-01-01","%Y")
strptime("2015-01-01","%Y")
strptime(as.Date("2015-01-01"),"%Y")
strptime(as.Date("2015-01-01"),format="%Y")
strptime("2015-01-01",format="%Y")
as.Date("2015-01-01",format="%Y")
format.Date("2015-01-01","%Y")
devtools::install_github("alfcrisci/rWeatherITA")
get_daily_weather(typestaz = "GSOD", "2015-01-01", "2015-02-28", idstaz = "161700")
devtools::install_github("alfcrisci/rWeatherITA")
library("rWeatherITA")
get_daily_weather(typestaz = "GSOD", "2015-01-01", "2015-02-28", idstaz = "161700")
devtools::install_github("alfcrisci/rWeatherITA")
library("rWeatherITA")
get_daily_weather(typestaz = "GSOD", "2015-01-01", "2015-02-28", idstaz = "161700")
library("rWeatherITA")
get_daily_weather(typestaz = "GSOD", "2015-01-01", "2015-02-28", idstaz = "161700")
library("rWeatherITA")
devtools::install_github("alfcrisci/rWeatherITA")
library("rWeatherITA")
get_daily_weather(typestaz = "GSOD", "2015-01-01", "2015-02-28", idstaz = "161700")
b=get_daily_weather(typestaz = "GSOD", "2015-01-01", "2015-02-28", idstaz = "161700")
names(b)
b["YEARMODA","MAX"]
b[c("YEARMODA","MAX"),]
b[c("YEARMODA","MAX")]
names(b)
b
head(b)
devtools::install_github("alfcrisci/rWeatherITA")
devtools::install_github("alfcrisci/rWeatherITA")
library(rWeatherITA)
b=get_daily_weather(typestaz = "GSOD", "2015-01-01", "2015-02-28", idstaz = "161700")
devtools::install_github("alfcrisci/rWeatherITA")
library(rWeatherITA)
b=get_daily_weather(typestaz = "GSOD", "2015-01-01", "2015-02-28", idstaz = "161700")
devtools::install_github("alfcrisci/rWeatherITA")
library(rWeatherITA)
b=get_daily_weather(typestaz = "GSOD", "2015-01-01", "2015-02-28", idstaz = "161700")
devtools::install_github("alfcrisci/rWeatherITA")
library(rWeatherITA)
b=get_daily_weather(typestaz = "GSOD", "2015-01-01", "2015-02-28", idstaz = "161700")
devtools::install_github("alfcrisci/rWeatherITA")
devtools::install_github("alfcrisci/rWeatherITA")
devtools::install_github("alfcrisci/rWeatherITA")
devtools::install_github("alfcrisci/rWeatherITA")
b=get_daily_weather(typestaz = "GSOD", "2015-01-01", "2015-02-28", idstaz = "161700")
devtools::install_github("alfcrisci/rWeatherITA")
devtools::install_github("alfcrisci/rWeatherITA")
b=get_daily_weather(typestaz = "GSOD", "2015-01-01", "2015-02-28", idstaz = "161700")
devtools::install_github("alfcrisci/rWeatherITA")
b=get_daily_weather(typestaz = "GSOD", "2015-01-01", "2015-02-28", idstaz = "161700")
devtools::install_github("alfcrisci/rWeatherITA")
b=get_daily_weather(typestaz = "GSOD", "2015-01-01", "2015-02-28", idstaz = "161700")
devtools::install_github("alfcrisci/rWeatherITA")
b=get_daily_weather(typestaz = "GSOD", "2015-01-01", "2015-02-28", idstaz = "161700")
b=get_daily_weather(typestaz = "GSOD", "2015-01-01", "2016-02-28", idstaz = "161700")
devtools::install_github("alfcrisci/rWeatherITA")
b=get_daily_weather(typestaz = "GSOD", "2015-01-01", "2016-02-28", idstaz = "161700")
library("threewords", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
results <- from_words(key = "1RCEOYRO", words = c("notte","agitare","eterni"))
results
results$position
results$position[1]
c(results$position[2],results$position[1])
?"SpatialPoints"
casa=SpatialPoints(data.frame(lon=results$position[2],lat=results$position[1]),proj4string=CRS("+init=epsg:4326"))
mapview(casa)
library(mapview)
mapview(casa)
casa=SpatialPointsDataFrame(data.frame(lon=results$position[2],lat=results$position[1]),data=1,proj4string=CRS("+init=epsg:4326"))
mapview(casa)
casa
casa=SpatialPointsDataFrame(data.frame(lon=results$position[2],lat=results$position[1]),data.frame(pos="casa"),proj4string=CRS("+init=epsg:4326"))
casa
mapview(casa)
results <- from_words(key = "1RCEOYRO", words = c("agitare","notte","eterni"))
casa=SpatialPointsDataFrame(data.frame(lon=results$position[2],lat=results$position[1]),data.frame(pos="casa"),proj4string=CRS("+init=epsg:4326"))
mapview(casa)
casa_UTM=spTransform(casa,proj4string=CRS("+init=epsg:3003"))
casa_UTM=spTransform(casa,CRS("+init=epsg:3003"))
casa_UTM
casa_UTM=spTransform(casa,CRS("+init=epsg:32632"))
casa_UTM
casa_UTM=spTransform(casa,CRS("+init=epsg:25832"))
casa_UTM
lon=results$position[2]
lon
results <- from_words(key = "1RCEOYRO", words = c("notte","agitare","eterni"))
casa=SpatialPointsDataFrame(data.frame(lon=results$position[2],lat=results$position[1]),data.frame(pos="casa"),proj4string=CRS("+init=epsg:4326"))
casa_UTM=spTransform(casa,CRS("+init=epsg:25832"))
casa_UTM
results <- from_words(key = "1RCEOYRO", words = c("palato","arancio","baffi"))
casa2=SpatialPointsDataFrame(data.frame(lon=results$position[2],lat=results$position[1]),data.frame(pos="casa"),proj4string=CRS("+init=epsg:4326"))
casa2_UTM=spTransform(casa2,CRS("+init=epsg:25832"))
casa2_UTM
mapview(casa2,casa)
mapview(casa2)
mapview(casa2)+mapview(casa)
monitoraggi_2015=read.csv("https://cdn.rawgit.com/alfcrisci/redlav_monitoring/master/data_redlav_station.csv")
names(monitoraggi_2015)
rownames(monitoraggi_2015)=monitoraggi_2015$data
monitoraggi_2015$data=NULL
library(xts)
library(ggfortify)
monitoraggi_2015_ts=as.xts(monitoraggi_2015)
a
monitoraggi_2015=read.csv("https://cdn.rawgit.com/alfcrisci/redlav_monitoring/master/data_redlav_station.csv")
monitoraggi_2015
rownames(monitoraggi_2015)=monitoraggi_2015$data
monitoraggi_2015
monitoraggi_2015$data=NULL
monitoraggi_2015_ts=as.xts(monitoraggi_2015)
monitoraggi_2015_ts
autoplot(monitoraggi_2015[,"Id_1"])
plot(monitoraggi_2015[,"Id_1"])
autoplot(monitoraggi_2015_ts[,"Id_1"])
monitoraggi_2015_ts
monitoraggi_2015=read.csv("https://cdn.rawgit.com/alfcrisci/redlav_monitoring/master/data_redlav_station.csv")
rownames(monitoraggi_2015)=monitoraggi_2015$data
monitoraggi_2015$data=NULL
monitoraggi_2015_ts=as.xts(monitoraggi_2015)
autoplot(monitoraggi_2015_ts[,"Id_1"])
monitoraggi_2015_ts
monitoraggi_2015=read.csv("https://cdn.rawgit.com/alfcrisci/redlav_monitoring/master/data_redlav_station.csv")
monitoraggi_2015
monitoraggi_2015=read.csv("https://rawgit.com/alfcrisci/redlav_monitoring/master/data_redlav_station.csv")
monitoraggi_2015
rownames(monitoraggi_2015)=monitoraggi_2015$data
monitoraggi_2015$data=NULL
monitoraggi_2015_ts=as.xts(monitoraggi_2015)
autoplot(monitoraggi_2015_ts[,"Id_1"])
autoplot(monitoraggi_2015_ts[,"Id_2"])
autoplot(monitoraggi_2015_ts[,"Id_3"])
autoplot(monitoraggi_2015_ts[,"Id_4"])
autoplot(monitoraggi_2015_ts[,"Id_5"])
autoplot(monitoraggi_2015_ts[,"Id_6"])
autoplot(monitoraggi_2015_ts[,"Id_7"])
autoplot(monitoraggi_2015_ts[,"Id_8"])
autoplot(monitoraggi_2015_ts[,"Id_9"])
autoplot(monitoraggi_2015_ts[,"Id_10"])
autoplot(monitoraggi_2015_ts[,"Id_1"])
library(rAedesSim)
trans_rates(transition = "Ovideposition")
trans_rates(transition = "Ovideposition")
trans_rates(transition = "Eggs2larvae")
trans_rates(transition = "Larvae2Pupae")
trans_rates(transition = "Pupae2Adult")
mortality_rate(stage="Adult")
mortality_rate(stage="Eggs")
mortality_rate(stage="Pupae")
mortality_rate( stage="Larval")
trans_rates(transition = "Ovideposition")
trans_rates(transition = "Eggs2larvae")
trans_rates(transition = "Larvae2Pupae")
trans_rates(transition = "Pupae2Adult")
mortality_rate(stage="Adult")
mortality_rate(stage="Eggs")
mortality_rate(stage="Pupae")
mortality_rate( stage="Larval")
data_capannori_2015=read.csv("https://rawgit.com/alfcrisci/redlav_monitoring/master/meteo_data/Toscana_Capannori_Id_1.csv")
data_capannori_2015
names(data_capannori_2015)
as.Date(data_capannori_2015$datatime)
data_capannori_2015$date=as.Date(data_capannori_2015$datatime)
delta_t=data_capannori_2015$tair-data_capannori_2015$watertemp
hist(delta_t)
delta_t
data_capannori_2015$ora
unique(data_capannori_2015$ora)
?xts
library(xts)
library(xts)
?xts
xts(delta_t,order.by=data_capannori_2015$datetime)
as.POSIXct(data_capannori_2015$datetime)
data_capannori_2015$datetime
data_capannori_2015
xts(delta_t,order.by=as.POSIXct(data_capannori_2015$datatime))
plot(xts(delta_t,order.by=as.POSIXct(data_capannori_2015$datatime)))
analitic=merge(delta_t,prec_ts)
prec_ts=xts(data_capannori_2015$pp,order.by=as.POSIXct(data_capannori_2015$datatime))
analitic=merge(delta_t,prec_ts)
library(ggfortify)
autoplot(analitic)
analitic
analitic=xts(cbind(delta_t,data_capannori_2015$pp),order.by=as.POSIXct(data_capannori_2015$datatime))
autoplot(analitic)
analitic=xts(cbind(data_capannori_2015$watertemp,data_capannori_2015$pp),order.by=as.POSIXct(data_capannori_2015$datatime))
autoplot(analitic)
analitic=xts(cbind(data_capannori_2015$watertemp,data_capannori_2015$tair,data_capannori_2015$pp),order.by=as.POSIXct(data_capannori_2015$datatime))
autoplot(analitic)
data_grosseto_2015=read.csv("https://rawgit.com/alfcrisci/redlav_monitoring/master/meteo_data/Toscana_Grosseto_Id_6.csv")
data_grosseto_2015$date=as.Date(data_grosseto_2015$datatime)
delta_t_gro=data_grosseto_2015$tair-data_grosseto_2015$watertemp
hist(delta_t_gro)
analitic_gro=xts(cbind(data_grosseto_gro_2015$watertemp,data_grosseto_2015$tair,data_grosseto_2015$pp),order.by=as.POSIXct(data_grosseto_2015$datatime))
autoplot(analitic_gro)
analitic_gro=xts(cbind(data_grosseto_2015$watertemp,data_grosseto_2015$tair,data_grosseto_2015$pp),order.by=as.POSIXct(data_grosseto_2015$datatime))
autoplot(analitic_gro)
analitic_gro=xts(data.frame(grossetoTw=data_grosseto_2015$watertemp,grossetoTair=data_grosseto_2015$tair,grossetoPrec=data_grosseto_2015$pp),order.by=as.POSIXct(data_grosseto_2015$datatime))
autoplot(analitic_gro)
install.packages("weatherData")
library(weatherData)
firenzedaily <-getSummarizedWeather("LIRQ", "1996-01-01", "1997-01-01",opt_all_columns = TRUE)
firenzedaily
data_pisa5_2015=read.csv("https://rawgit.com/alfcrisci/redlav_monitoring/master/meteo_data/Toscana_pisa_Id_5.csv")
data_pisa5_2015$date=as.Date(data_pisa5_2015$datatime)
delta_t_pis=data_pisa5_2015$tair-data_pisa5_2015$watertemp
analitic_pis5=xts(data.frame(pisaTw=data_pisa5_2015$watertemp,pisaTair=data_pisa5_2015$tair,pisaPrec=data_pisa5_2015$pp),order.by=as.POSIXct(data_pisa5_2015$datatime))
autoplot(analitic_pis5)
data_pisa5_2015$datatime
data_pisa5_2015
data_pisa5_2015=read.csv("https://rawgit.com/alfcrisci/redlav_monitoring/master/meteo_data/Toscana_Pisa_Id_5.csv")
data_pisa5_2015
data_pisa5_2015$date=as.Date(data_pisa5_2015$datatime)
delta_t_pis=data_pisa5_2015$tair-data_pisa5_2015$watertemp
analitic_pis5=xts(data.frame(pisaTw=data_pisa5_2015$watertemp,pisaTair=data_pisa5_2015$tair,pisaPrec=data_pisa5_2015$pp),order.by=as.POSIXct(data_pisa5_2015$datatime))
autoplot(analitic_pis5)
library(lubridate)
library(xts)
library(ggfortify)
data_pisa5_2015$date=as.Date(data_pisa5_2015$datatime)
delta_t_pis=data_pisa5_2015$tair-data_pisa5_2015$watertemp
analitic_pis5=xts(data.frame(pisaTw=data_pisa5_2015$watertemp,pisaTair=data_pisa5_2015$tair,pisaPrec=data_pisa5_2015$pp),order.by=as.POSIXct(data_pisa5_2015$datatime))
autoplot(analitic_pis5)
bologna_clim_daily=data.frame(TmaxMedian=NA,TmaxP90=NA,Tmax95=NA,
TmaxAppMedian=NA,TmaxAppP90=NA,TmaxApp95=NA,
TmaxApp_V_Median=NA,Tmax_V_AppP90=NA,Tmax_V_App95=NA,
TminMedian=NA,TminP90=NA,Tmin95=NA,
TmedMedian=NA,TmedP90=NA,Tmed95=NA
)
names(bologna_clim_daily)
paste0(names(bologna_clim_daily),"_Day")
citation("dplyr")
setwd("/home/alf/Scrivania/alf_github/rAedesSim")
library(devtools)
devtools::document()
warnings()
warnings()
warnings()
devtools::document()
?gunzip
?gzfile
setwd("/home/alf/Scrivania/alf_github/rWeatherITA")
year=2001
as.Date(year)
as.Date(paste0=(year,"-01-01")
as.Date(paste0=(year,"-01-01"))
as.Date(paste0(year,"-01-01"))
library(R.utils)
dir()
setwd("/home/alf/Scrivania/alf_github/rWeatherITA")
devtools::document()
devtools::document()
